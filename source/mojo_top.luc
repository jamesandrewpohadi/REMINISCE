module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    output spi_miso,        // AVR SPI MISO
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    output avr_rx,          // AVR RX (FPGA TX)
    input l1,
    input l2,
    input l3,
    input o,
    input u,
    input d,
    input l,
    input r,
    output x0,
    output x1,
    output x2,
    output x3,
    output x4,
    output x5,
    output x6,
    output x7,
    output y0,
    output y1,
    output y2,
    output y3,
    output y4,
    output y5,
    output y6,
    output y7
  ) {
  
  sig rst;                  // reset signal
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    edge_detector ud(#RISE(1), #FALL(0));
    edge_detector dd(#RISE(1), #FALL(0));
    edge_detector ld(#RISE(1), #FALL(0));
    edge_detector rd(#RISE(1), #FALL(0));
    edge_detector od(#RISE(1), #FALL(0));
    edge_detector l1d(#RISE(1), #FALL(0));
    edge_detector l2d(#RISE(1), #FALL(0));
    edge_detector l3d(#RISE(1), #FALL(0));
    .rst(rst) {
      emulator myGame; // define our device
      fsm state(#INIT(IDLE)) = {IDLE, RETURN, CHECK, INCR, PRE_L, PRE_R, PRE_U, PRE_D, L, R, U, D, PRE_L1, L1, L1_DS1, L1_DS2, L1_DS3, L1_DS4, L1_DSW, L1_P1, L1_P2, L1_P3, L1_P4, L1_PW, L2, L2_DS1, L2_DS2, L2_DS3, L2_DS4, L2_DS5, L2_DS6, L2_DSW, L2_P1, L2_P2, L2_P3, L2_P4, L2_P5, L2_P6, L2_PW, L3, L3_DS1, L3_DS2, L3_DS3, L3_DS4, L3_DS5, L3_DS6, L3_DS7, L3_DS8, L3_DS9, L3_DS10, L3_DSW, L3_P1, L3_P2, L3_P3, L3_P4, L3_P5, L3_P6, L3_P7, L3_P8, L3_P9, L3_P10, L3_PW, DF};
    }
  }
  
  dff counter[28](.clk(clk), .rst(rst)); // Define the counter
  
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
    ud.in = u;
    dd.in = d;
    ld.in = l;
    rd.in = r;
    od.in = o;
    l1d.in = l1;
    l2d.in = l2;
    l3d.in = l3;
    counter.d = counter.q+1;
    myGame.wb = 0;
    myGame.wl = 0;
    myGame.ws = 0;
    myGame.rstb = 2b0;
    myGame.rstl = 0;
    myGame.rsts = 0;
    myGame.bsel = 0;
    myGame.asel = 3b0;
    myGame.alufn = 6b0;
    x0 = myGame.x0;
    x1 = myGame.x1;
    x2 = myGame.x2;
    x3 = myGame.x3;
    x4 = myGame.x4;
    x5 = myGame.x5;
    x6 = myGame.x6;
    x7 = myGame.x7;
    y0 = myGame.y0;
    y1 = myGame.y1;
    y2 = myGame.y2;
    y3 = myGame.y3;
    y4 = myGame.y4;
    y5 = myGame.y5;
    y6 = myGame.y6;
    y7 = myGame.y7;
    led = myGame.eq[7:0];
    
    case (state.q) {
      state.IDLE:
        if (l1d.out) {
          myGame.rstl = 3b001;
          myGame.wl = 1;
          state.d = state.L1;
          counter.d = 0;
        }
        if (l2d.out) {
          myGame.rstl = 3b010;
          myGame.wl = 1;
          state.d = state.L2;
          counter.d = 0;
        }
        if (l3d.out) {
          myGame.rstl = 3b011;
          myGame.wl = 1;
          state.d = state.L3;
          counter.d = 0;
        }
      state.RETURN:
        if (c{myGame.lvl,myGame.sqc} == 6b010000) {
          state.d = state.L1_P1;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b010001) {
          state.d = state.L1_P2;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b010010) {
          state.d = state.L1_P3;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b010011) {
          state.d = state.L1_P4;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b010100) {
          state.d = state.L1_PW;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b100000) {
          state.d = state.L2_P1;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b100001) {
          state.d = state.L2_P2;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b100010) {
          state.d = state.L2_P3;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b100011) {
          state.d = state.L2_P4;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b100100) {
          state.d = state.L2_P5;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b100101) {
          state.d = state.L2_P6;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b100110) {
          state.d = state.L2_PW;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110000) {
          state.d = state.L3_P1;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110001) {
          state.d = state.L3_P2;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110010) {
          state.d = state.L3_P3;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110011) {
          state.d = state.L3_P4;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110100) {
          state.d = state.L3_P5;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110101) {
          state.d = state.L3_P6;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110110) {
          state.d = state.L3_P7;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b110111) {
          state.d = state.L3_P8;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b111000) {
          state.d = state.L3_P9;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b111001) {
          state.d = state.L3_P10;
        }
        if (c{myGame.lvl,myGame.sqc} == 6b111010) {
          state.d = state.L3_PW;
        }
      state.U:
        if (myGame.display[15] != 1 && myGame.display[14] != 1 && myGame.display[13] != 1 && myGame.display[12] != 1) {
          myGame.wb = 1; // write = true
          myGame.rstb = 2b0; // reset=false
          myGame.asel = 3b010; // a=1
          myGame.bsel = 0; // b=board
          myGame.alufn = 6b100000; // shl
        }
        state.d = state.RETURN;
      state.D:
        if (myGame.display[3] != 1 && myGame.display[2] != 1 && myGame.display[1] != 1 && myGame.display[0] != 1) {
          myGame.wb = 1; // write = true
          myGame.rstb = 2b0; // reset=false
          myGame.asel = 3b010; // a=4
          myGame.bsel = 0; // b=board
          myGame.alufn = 6b100001; // shr
        }
        state.d = state.RETURN;
      state.L:
        if (myGame.display[15] != 1 && myGame.display[11] != 1 && myGame.display[7] != 1 && myGame.display[3] != 1) {
          myGame.wb = 1; // write = true
          myGame.rstb = 2b0; // reset=false
          myGame.asel = 3b001; // a=1
          myGame.bsel = 0; // b=board
          myGame.alufn = 6b100000; // shl
        }
        state.d = state.RETURN;
      state.R:
        if (myGame.display[0] != 1 && myGame.display[4] != 1 && myGame.display[8] != 1 && myGame.display[12] != 1) {
          myGame.wb = 1; // write = true
          myGame.rstb = 2b0; // reset=false
          myGame.asel = 3b001; // a=1
          myGame.bsel = 0; // b=board
          myGame.alufn = 6b100001; // shr
        }
        state.d = state.RETURN;
      state.CHECK:
        // check the board and sequence. If equal, go to INCR, else go to DF
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b110011;
        if (counter.q[25] == 1) {
          if (myGame.eq == 16b1) {
            state.d = state.INCR;
          } else {
            state.d = state.DF;
          }
        }
      state.INCR:
        // increment the sequence and continue the game state
        myGame.alufn = 6b0; // add
        myGame.asel = 3b001; // a=1
        myGame.bsel = 1; // b=sequence
        myGame.ws = 1; // write = true
        myGame.rsts = 0; // reset = false
        state.d = state.RETURN;
      state.DF:
        myGame.wb = 1;
        myGame.asel = 3b11;
        myGame.alufn = 6b011010;
        if (od.out) {
          myGame.rstb = 2b10;
          state.d = state.IDLE;
        }
      state.L1:
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS1
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L1_DS1;
        }
      state.L1_DS1:
      // load sequence 1
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS2
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L1_DS2;
        }
      state.L1_DS2:
      // load sequence 2
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS3
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L1_DS3;
        }
      state.L1_DS3:
      // load sequence 3
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS4
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L1_DS4;
        }
      state.L1_DS4:
        // load sequence 4
        myGame.asel = 3b0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DSW
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L1_DSW;
        }
      state.L1_DSW:
      // load sequence win
        if (counter.q[27]==1) {
          // reset sequence, the next state is L1_P1
          myGame.rstb = 2b1;
          myGame.wb = 1;
          myGame.rsts = 1;
          myGame.ws = 1;
          state.d = state.L1_P1;
        }
        myGame.asel = 3b0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b1;
        myGame.wb = 1;
      state.L1_P1:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L1_P2:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L1_P3:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L1_P4:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L1_PW:
        if (od.out) {
          state.d = state.IDLE;
        }
      state.L2:
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b00;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS1
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L2_DS1;
        }
      state.L2_DS1:
      // load sequence 1
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS2
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L2_DS2;
        }
      state.L2_DS2:
      // load sequence 2
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS3
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L2_DS3;
        }
      state.L2_DS3:
      // load sequence 3
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS4
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L2_DS4;
        }
      state.L2_DS4:
        // load sequence 4
        myGame.asel = 3b0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DSW
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L2_DS5;
        }
      state.L2_DS5:
      // load sequence 3
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS4
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L2_DS6;
        }
      state.L2_DS6:
        // load sequence 4
        myGame.asel = 3b0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DSW
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L2_DSW;
        }
      state.L2_DSW:
      // load sequence win
        if (counter.q[27]==1) {
          // reset sequence, the next state is L1_P1
          myGame.rstb = 2b1;
          myGame.wb = 1;
          myGame.rsts = 1;
          myGame.ws = 1;
          state.d = state.L2_P1;
        }
        myGame.asel = 3b0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b1;
        myGame.wb = 1;
      state.L2_P1:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L2_P2:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L2_P3:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L2_P4:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L2_P5:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L2_P6:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L2_PW:
        if (od.out) {
          state.d = state.IDLE;
        }
      state.L3:
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS1
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS1;
        }
      state.L3_DS1:
      // load sequence 1
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS2
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS2;
        }
      state.L3_DS2:
      // load sequence 2
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS3
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS3;
        }
      state.L3_DS3:
      // load sequence 3
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS4
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS4;
        }
      state.L3_DS4:
        // load sequence 4
        myGame.asel = 3b0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DSW
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS5;
        }
      state.L3_DS5:
      // load sequence 1
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS2
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS6;
        }
      state.L3_DS6:
      // load sequence 2
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS3
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS7;
        }
      state.L3_DS7:
      // load sequence 3
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS4
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS8;
        }
      state.L3_DS8:
      // load sequence 1
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS2
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS9;
        }
      state.L3_DS9:
      // load sequence 2
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS3
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DS10;
        }
      state.L3_DS10:
      // load sequence 3
        myGame.asel = 3b0;
        myGame.bsel = 0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b0;
        myGame.wb = 1b1;
        myGame.ws = 0;
        if (counter.q[27]==1) {
          // increment sequence by 1, the next state is L1_DS4
          myGame.alufn = 6b0; // add
          myGame.asel = 3b001; // a=1
          myGame.bsel = 1; // b=sequence
          myGame.ws = 1; // write = true
          myGame.rsts = 0; // reset = false
          counter.d = 0;
          state.d = state.L3_DSW;
        }
      state.L3_DSW:
      // load sequence win
        if (counter.q[27]==1) {
          // reset sequence, the next state is L1_P1
          myGame.rstb = 2b1;
          myGame.wb = 1;
          myGame.rsts = 1;
          myGame.ws = 1;
          state.d = state.L1_P1;
        }
        myGame.asel = 3b0;
        myGame.alufn = 6b011010;
        myGame.rstb = 2b1;
        myGame.wb = 1;
      state.L3_P1:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P2:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P3:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P4:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P5:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P6:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P7:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P8:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P9:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_P10:
        if (od.out) {
          state.d = state.CHECK;
        }
        if (ud.out) {
          state.d = state.U;
        }
        if (dd.out) {
          state.d = state.D;
        }
        if (ld.out) {
          state.d = state.L;
        }
        if (rd.out) {
          state.d = state.R;
        }
      state.L3_PW:
        if (od.out) {
          state.d = state.IDLE;
        }
      default:
        led = 8b00000000;
        myGame.wb = 0;
        myGame.wl = 0;
        myGame.ws = 0;
        myGame.rstb = 2b0;
        myGame.rstl = 0;
        myGame.rsts = 0;
        myGame.bsel = 0;
        myGame.asel = 3b0;
        myGame.alufn = 6b0;
    }
    
  }
}